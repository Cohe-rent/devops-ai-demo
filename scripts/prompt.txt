Generate a valid Terraform configuration using the kreuzwerker/docker provider (version ~> 3.0.2).

    Configure the provider with this block:

terraform {
  required_providers {
    docker = {
      source  = "kreuzwerker/docker"
      version = "~> 3.0.2"
    }
  }
}

provider "docker" {
  host = "unix:///var/run/docker.sock"
}

    Create a Docker network named app-network.

    Create a Docker container named nginx:

        Use image nginx:latest

        Attach to the app-network

        Map container port 80 to host port 8180 using:

ports {
  internal = 80
  external = 8180
}

Use networks_advanced block to reference the network:

    networks_advanced {
      name = docker_network.app_network.name
    }

    Add a depends_on block referencing the network.

Create another container named flask_app:

    Use image tiangolo/uwsgi-nginx-flask:python3.8

    Mount host directory ${abspath(path.module)}/app to container /app using:

volumes {
  host_path      = "${abspath(path.module)}/app"
  container_path = "/app"
}

Map container port 5000 to host port 8100:

        ports {
          internal = 5000
          external = 8100
        }

        Attach to the same app-network using networks_advanced

        Add a depends_on block referencing the network.

Output fully valid HCL code, ready to run with terraform init and terraform apply.
