Generate a valid Terraform configuration using the kreuzwerker/docker provider. The configuration should:

    Initialize the docker provider using:

terraform {
  required_providers {
    docker = {
      source  = "kreuzwerker/docker"
      version = "~> 3.0.2"
    }
  }
}
Create a Docker network named app-network

Define a Docker container named nginx that:

    Uses the nginx:latest image

    Connects to the app-network

    Maps container port 80 to host port 8180

    Uses the correct ports block structure:

ports {
  internal = 80
  external = 8180
}

Attaches to the network using the correct networks_advanced block:

    networks_advanced {
      name = docker_network.app_network.name
    }

    Uses the correct depends_on syntax (reference the full network resource).

Define a Docker container named flask_app that:

    Uses the tiangolo/uwsgi-nginx-flask:python3.8 image

    Mounts the host folder ${path.module}/app into /app in the container using:

volumes {
  host_path      = "${abspath(path.module)}/app"
  container_path = "/app"
}


Maps port 5000 to host port 8100 using:

ports {
  internal = 5000
  external = 8100
}

Attaches to the app-network using the correct networks_advanced block

Includes the proper depends_on syntax

üîπ Flask Backend (scripts/app/)

    A simple Python Flask app (app.py) that returns ‚Äú‚úÖ Hello from Flask backend!‚Äù at the root / endpoint.

    requirements.txt should only contain flask.

    Dockerfile should:

        Use python:3.11-slim base image.

        Set the working directory to /app.

        Copy all files.

        Install dependencies using pip.

        Expose port 5000.

        Run python app.py.

üîπ NGINX Frontend Reverse Proxy (scripts/nginx/)

    default.conf should:

        Listen on port 80.

        Forward all requests to http://flask-backend:5000.

        Set Host and X-Real-IP headers.

    Dockerfile should:

        Use nginx:alpine base image.

        Copy default.conf to /etc/nginx/conf.d/default.conf.

üîπ Docker Build & Run Commands

From the scripts/ directory:

    Create Docker network app-network:

docker network create app-network

Build images:

docker build -t flask-backend ./app
docker build -t flask-nginx ./nginx

Run containers:

docker run -d --name flask-backend --network app-network flask-backend
docker run -d --name flask-nginx --network app-network -p 8180:80 flask-nginx
