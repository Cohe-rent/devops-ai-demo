Generate a complete DevOps project that uses Terraform to provision and run:

1. A Docker network called app-network.
2. A Flask-based Python backend exposed on port 5000 (internally), mapped to port 8100 (externally).
3. An NGINX reverse proxy container that listens on port 80 (internally), mapped to 8180 (externally), and forwards traffic to the Flask backend.
4. Use Terraform to define Docker resources:
   - Docker provider configuration.
   - Docker network resource.
   - Docker images for Flask and NGINX.
   - Docker containers for Flask and NGINX.
   - Mount Flask app source from scripts/app/ directory into the container.

Include the following:
- main.tf with all Terraform resources.
- scripts/app/app.py with a simple Hello from Flask backend! endpoint.
- scripts/app/requirements.txt with required Python libraries.
- scripts/app/Dockerfile for building the Flask image.
- scripts/nginx/default.conf for NGINX reverse proxy config to forward to Flask.
- scripts/nginx/Dockerfile to build the NGINX image with the custom config.

Also provide manual Docker build and run commands as an optional test path for local testing outside of Terraform.
