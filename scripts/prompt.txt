Generate a valid Terraform configuration in HCL format using the kreuzwerker/docker provider (version ~> 3.0.2). The configuration should:

1. Configure the Docker provider:
   - Use host = "unix:///var/run/docker.sock"

2. Create a Docker network named "app-network".

3. Define a Docker container resource named "nginx":
   - Use image "nginx:latest"
   - Map port 80 in the container to port 8180 on the host:
     ports {
       internal = 80
       external = 8180
     }
   - Attach this container to the "app-network" using:
     networks_advanced {
       name = docker_network.app_network.name
     }
   - Include a depends_on block referencing the Docker network.

4. Define a Docker container resource named "flask_app":
   - Use image "tiangolo/uwsgi-nginx-flask:python3.8"
   - Mount host path "${abspath(path.module)}/app" to container path "/app":
     volumes {
       host_path      = "${abspath(path.module)}/app"
       container_path = "/app"
     }
   - Map port 5000 in the container to port 8100 on the host:
     ports {
       internal = 5000
       external = 8100
     }
   - Attach this container to the same "app-network" using:
     networks_advanced {
       name = docker_network.app_network.name
     }
   - Include a depends_on block referencing the Docker network.

Only output fully working and valid Terraform HCL code â€” no explanation, no markdown, no YAML. The output must be a single file named main.tf that is ready to run with terraform init and terraform apply.
