Generate a complete DevOps project using Terraform to provision and run the following Docker-based setup:

    A Docker network named app-network.

    A Flask-based Python backend app:

        Runs on port 5000 inside the container.

        Exposed on port 8100 on the host.

        Mount the Flask app source from scripts/app/ directory into the container.

    An NGINX reverse proxy container:

        Listens on port 80 inside the container.

        Exposed on port 8180 on the host.

        Forwards traffic to the Flask backend.

Terraform details:

    Use the Docker provider.

    Define a single Docker network resource (docker_network.app_network) — avoid duplicates.

    Build Docker images for Flask and NGINX using correct context syntax:
    ✅ context = "${path.module}/scripts/app" (not path.module("./scripts/app", "")).

    Use a single depends_on list per resource to handle dependencies properly.

Deliver the following project structure:

    main.tf: Terraform code with:

        Docker provider

        Docker network

        Docker images and containers (Flask + NGINX)

    scripts/app/app.py: Flask app with "✅ Hello from Flask backend!" endpoint.

    scripts/app/requirements.txt: Python dependencies.

    scripts/app/Dockerfile: Builds the Flask image.

    scripts/nginx/default.conf: NGINX config to proxy requests to Flask.

    scripts/nginx/Dockerfile: Builds the NGINX image using default.conf.

Bonus:
Also include manual Docker build and run commands as an optional local test path (outside Terraform).
